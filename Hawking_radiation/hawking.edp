//===============================================================
// LJLL Jussieu - Paris
// ENS Paris-Saclay
// LPT Orsay
// emeriau.pe@gmail.com
// avril 2017
//===============================================================

load "ff-Ipopt";

//===============================================================
// create mesh 1D and 2D
//===============================================================

real radius = 40;
real ax = 1;
real t = 0;
real sigma0 = 5.;
real ampkn = .5*(-1./16.+1./4.);
real tmax = 160., dt = 1.;


mesh Th1d = square(100,1,[radius*x-.5*radius,y]);
fespace Vh1d(Th1d,P1,periodic=[[1,x],[3,x]]);

plot (Th1d,wait=1);

real a = .5;
func power3 = a*(.5*(x+1))^3+(1-a)*.5*(x+1);
Vh1d uh = power3;
Vh1d xx = x;
plot(xx,wait=1,cmm="x before");


plot(uh,wait=1);

Th1d = movemesh(Th1d,[uh,y]);
plot(Th1d,wait=1);
Vh1d xxx = x;
plot(xxx,wait=1,cmm="x after");



mesh Th = square(100,100,[radius*x-0.5*radius,radius*y-.5*radius]);






func real potential(real xx){
  return -.25*exp(-xx*xx/(sigma0*sigma0));
}

func real knife(real xx, real tt){
  return ampkn*tanh(xx+.5*radius-.25*tt);
}
func real pottotal(real xx, real tt){
  return potential(xx) + knife(xx,tt);
}
Vh1d poth = pottotal(x,75);

// for(int i = 0; i < 160; i++){
//   cout << i << endl;
//   Vh1d pot = pottotal(x,t);
//   Vh1d kni = knife(x,t);
  
//   //plot(kni,dim=3,fill=1);
//   plot(pot,dim=3,fill=1,wait=1);
//   t += dt;
//  }
